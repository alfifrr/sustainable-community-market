{
  "openapi": "3.0.0",
  "info": {
    "title": "Sustainable Community Market API",
    "version": "1.0.0",
    "description": "API documentation for Sustainable Community Market platform"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local development server"
    },
    {
      "url": "https://sustainable-community-market.onrender.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string", "format": "password" },
          "first_name": { "type": "string" },
          "last_name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "phone_number": { "type": "string" }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "label": { "type": "string" },
          "address": { "type": "string" },
          "details": { "type": "string" },
          "contact_person": { "type": "string" }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "price": { "type": "number" },
          "stock": { "type": "integer" },
          "category_id": { "type": "integer" },
          "address_id": { "type": "integer" },
          "expiration_date": { "type": "string", "format": "date-time" }
        }
      }
    }
  },
  "paths": {
    "/api/users": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Validation error"
          }
        }
      },
      "get": {
        "tags": ["Browse"],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "List of users retrieved successfully"
          }
        }
      }
    },
    "/api/category": {
      "get": {
        "tags": ["Browse"],
        "summary": "Get all categories",
        "description": "Retrieve list of all product categories",
        "responses": {
          "200": {
            "description": "Successfully retrieved categories list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          }
        }
      }
    },
    "/api/send-activation": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Send activation email",
        "description": "Send activation link to user's email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "alfifrr"
                  },
                  "password": {
                    "type": "string",
                    "example": "Securepass123!"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activation email sent successfully"
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/refresh-token": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh access token",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Token refreshed successfully"
          }
        }
      }
    },
    "/api/activate/{token}": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Activate account",
        "description": "Activate user account using token",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Activation token"
          }
        ],
        "responses": {
          "200": {
            "description": "Account activated successfully"
          },
          "400": {
            "description": "Invalid or expired token"
          }
        }
      }
    },
    "/api/addresses": {
      "post": {
        "tags": ["Manage Address"],
        "summary": "Add new address",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Address created successfully"
          }
        }
      },
      "get": {
        "tags": ["Manage Address"],
        "summary": "Get user addresses",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Addresses retrieved successfully"
          }
        }
      }
    },
    "/api/addresses/{address_id}": {
      "put": {
        "tags": ["Manage Address"],
        "summary": "Update address",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address updated successfully"
          }
        }
      },
      "delete": {
        "tags": ["Manage Address"],
        "summary": "Delete address",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address deleted successfully"
          }
        }
      }
    },
    "/api/products": {
      "post": {
        "tags": ["Seller"],
        "summary": "Create new product listing",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully"
          }
        }
      },
      "get": {
        "tags": ["Browse"],
        "summary": "Get all products",
        "responses": {
          "200": {
            "description": "Products retrieved successfully"
          }
        }
      }
    },
    "/api/products/{id}": {
      "put": {
        "tags": ["Seller"],
        "summary": "Update an existing product",
        "description": "Modify details of an existing product listing",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "description": "Product ID"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Coway 600ml"
                },
                "description": {
                  "type": "string",
                  "example": "Drinking Wotoh Beff"
                },
                "price": {
                  "type": "number",
                  "example": 5000
                },
                "stock": {
                  "type": "integer",
                  "example": 10
                },
                "category_id": {
                  "type": "integer",
                  "example": 2
                },
                "address_id": {
                  "type": "integer",
                  "example": 5
                },
                "expiration_date": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2030-04-19T23:59:59Z"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "tags": ["Seller"],
        "summary": "Delete a product",
        "description": "Remove a product listing from the marketplace",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "description": "Product ID"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "required": true,
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/api/process": {
      "post": {
        "tags": ["Seller"],
        "summary": "Process delivery for an order",
        "description": "Start processing a delivery for a confirmed transaction",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "transaction_id": {
                  "type": "integer",
                  "example": 5
                }
              },
              "required": ["transaction_id"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delivery processing started successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Transaction not found"
          }
        }
      }
    },
    "/api/buy": {
      "post": {
        "tags": ["Buyer"],
        "summary": "Purchase product",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address_id": { "type": "integer" },
                  "product_id": { "type": "integer" },
                  "quantity": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Purchase successful"
          }
        }
      }
    },
    "/api/confirm-delivery": {
      "post": {
        "tags": ["Buyer"],
        "summary": "Confirm product delivery",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_id": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Delivery confirmed successfully"
          }
        }
      }
    },
    "/api/cancel": {
      "post": {
        "tags": ["Buyer"],
        "summary": "Cancel order",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_id": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order cancelled successfully"
          }
        }
      }
    },
    "/api/rate": {
      "post": {
        "tags": ["Buyer"],
        "summary": "Rate a purchased product",
        "description": "Submit a rating for a product after successful delivery confirmation",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "required": true,
            "description": "Bearer token for authentication"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "transaction_id": {
                  "type": "integer",
                  "example": 1,
                  "description": "ID of the completed transaction"
                },
                "rating": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 5,
                  "example": 5,
                  "description": "Rating value between 1-5 stars"
                }
              },
              "required": ["transaction_id", "rating"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rating submitted successfully"
          },
          "400": {
            "description": "Invalid rating value or transaction not eligible for rating"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - User is not the buyer of this transaction"
          },
          "404": {
            "description": "Transaction not found"
          },
          "409": {
            "description": "Product has already been rated for this transaction"
          }
        }
      }
    },
    "/api/deposit": {
      "post": {
        "tags": ["Manage Funds"],
        "summary": "Deposit funds",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": { "type": "number" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deposit successful"
          }
        }
      }
    },
    "/api/withdraw": {
      "post": {
        "tags": ["Manage Funds"],
        "summary": "Withdraw funds",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": { "type": "number" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Withdrawal successful"
          }
        }
      }
    },
    "/api/product-history": {
      "get": {
        "tags": ["History"],
        "summary": "Get product history",
        "description": "Retrieve history of products for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved product history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Token expired or invalid permissions"
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "tags": ["History"],
        "summary": "Get transaction history",
        "description": "Retrieve transaction history for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved transaction history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Token expired or invalid permissions"
          }
        }
      }
    }
  }
}
